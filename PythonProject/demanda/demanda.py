import time
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.keys import Keys
from webdriver_manager.chrome import ChromeDriverManager
import pandas as pd

# Caminho do arquivo Excel
caminho_planilha = r"C:\Users\diego.brito\Downloads\robov1\saida_Anexos.xlsx"

# Fun√ß√£o para conectar ao navegador j√° aberto
def conectar_navegador_existente():
    print("üîÑ Conectando ao navegador na porta 9222...")
    options = webdriver.ChromeOptions()
    options.debugger_address = "localhost:9222"  # Porta do Chrome para depura√ß√£o
    driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()), options=options)
    driver.maximize_window()
    print("‚úÖ Conex√£o estabelecida!")
    return driver

# Fun√ß√£o para garantir que a p√°gina tenha carregado completamente
def esperar_pagina_carregar(driver, timeout=20):
    try:
        WebDriverWait(driver, timeout).until(lambda d: d.execute_script("return document.readyState") == "complete")

        # Aguarda o desaparecimento de um poss√≠vel elemento de carregamento
        try:
            WebDriverWait(driver, timeout).until(
                EC.invisibility_of_element_located(
                    (By.XPATH, "//div[contains(@class, 'loading') or contains(@class, 'spinner')]"))
            )
        except Exception:
            pass

        print("‚úÖ P√°gina carregada completamente!")
    except Exception as e:
        print(f"‚ö†Ô∏è Tempo limite ao esperar a p√°gina carregar: {e}")

# Fun√ß√£o para aguardar um elemento estar vis√≠vel e clic√°vel, com captura de exce√ß√µes
def esperar_elemento(driver, xpath, timeout=15):
    try:
        return WebDriverWait(driver, timeout).until(EC.element_to_be_clickable((By.XPATH, xpath)))
    except Exception:
        print(f"‚ö†Ô∏è Elemento n√£o encontrado: {xpath}")
        return None



# Fun√ß√£o para retornar ao menu lateral
def retornar_ao_menu(driver):
            try:
                menu = esperar_elemento(driver, "//button[@title='Menu']")
                if menu:
                    menu.click()

                aba_sec = esperar_elemento(driver,
                                           "/html/body/transferencia-especial-root/br-main-layout/div/div/div/div/br-side-menu/nav/div[3]/a/span[2]")
                if aba_sec:
                    aba_sec.click()
                    esperar_pagina_carregar(driver)
            except Exception as e:
                print(f"‚ö†Ô∏è Erro ao tentar voltar pelo menu: {e}")





# Fun√ß√£o para extrair n√∫meros da planilha
def extrair_numeros_planilha(caminho_arquivo):
    df = pd.read_excel(caminho_arquivo, dtype=str)
    if "Instrumento n¬∫" in df.columns:
        numeros = df["Instrumento n¬∫"].dropna().tolist()
        print(f"üìÑ {len(numeros)} n√∫meros extra√≠dos da planilha.")
        return numeros
    else:
        print("‚ö†Ô∏è ERRO: Coluna 'Instrumento n¬∫' n√£o encontrada na planilha!")
        return []

# Inicia o driver do Chrome
driver = conectar_navegador_existente()
esperar_pagina_carregar(driver)

# L√™ os n√∫meros da planilha
numeros_processos = extrair_numeros_planilha(caminho_planilha)

try:
    # Acessar menu lateral
    menu = esperar_elemento(driver, "//button[@title='Menu']")
    if menu:
        menu.click()

    aba_sec = esperar_elemento(driver, "/html/body/transferencia-especial-root/br-main-layout/div/div/div/div/br-side-menu/nav/div[3]/a/span[2]")
    if aba_sec:
        aba_sec.click()
        esperar_pagina_carregar(driver)

    # Iterar sobre cada n√∫mero da planilha
    for numero_processo in numeros_processos:
        print(f"üîç Pesquisando n√∫mero do processo: {numero_processo}")


        filtro = esperar_elemento(driver, "//i[@class='fas fa-filter']")
        if filtro:
            filtro.click()
            esperar_pagina_carregar(driver)

        input_field = esperar_elemento(driver, "/html/body/transferencia-especial-root/br-main-layout/div/div/div/main/transferencia-especial-main/transferencia-plano-acao/transferencia-plano-acao-consulta/br-table/div/br-fieldset/fieldset/div[2]/form/div[1]/div[2]/br-input/div/div/input")
        if input_field:
            input_field.clear()
            input_field.send_keys(numero_processo)
            input_field.send_keys(Keys.ENTER)
            esperar_pagina_carregar(driver)

        botao_detalhar = esperar_elemento(driver, "/html/body/transferencia-especial-root/br-main-layout/div/div/div/main/transferencia-especial-main/transferencia-plano-acao/transferencia-plano-acao-consulta/br-table/div/ngx-datatable/div/datatable-body/datatable-selection/datatable-scroller/datatable-row-wrapper/datatable-body-row/div[2]/datatable-body-cell[8]/div/div/button/i")
        if botao_detalhar:
            botao_detalhar.click()
            esperar_pagina_carregar(driver)

        botao_analise = esperar_elemento(driver, "/html/body/transferencia-especial-root/br-main-layout/div/div/div/main/transferencia-especial-main/transferencia-plano-acao/transferencia-cadastro/br-tab-set/div/nav/ul/li[4]/button/span")
        if botao_analise:
            driver.execute_script("arguments[0].scrollIntoView();", botao_analise)
            driver.execute_script("arguments[0].click();", botao_analise)
            esperar_pagina_carregar(driver)

        # Tentar encontrar e clicar no bot√£o "Adicionar"
        botao_adicionar = esperar_elemento(driver,
                                           "/html/body/transferencia-especial-root/br-main-layout/div/div/div/main/transferencia-especial-main/transferencia-plano-acao/transferencia-cadastro/br-tab-set/div/nav/transferencia-consulta/div[1]/div[1]/button")

        if botao_adicionar:
            driver.execute_script("arguments[0].scrollIntoView();", botao_adicionar)
            driver.execute_script("arguments[0].click();", botao_adicionar)
            esperar_pagina_carregar(driver)
            print("‚úÖ Bot√£o 'Adicionar' clicado com sucesso!")

        else:
            print("‚ö†Ô∏è Bot√£o 'Adicionar' n√£o encontrado. Pulando para o pr√≥ximo processo...")
            retornar_ao_menu(driver)  # üîÑ Garante que volte ao menu antes de continuar
            continue  # Pula para o pr√≥ximo processo no loop




        # Fun√ß√£o para selecionar "Minist√©rio do Esporte"
        def selecionar_ministerio(driver):
            try:
                print("üîç Tentando selecionar 'Minist√©rio do Esporte'...")
                campo_ministerio = esperar_elemento(driver,
                                                    "/html/body/transferencia-especial-root/br-main-layout/div/div/div/main/transferencia-especial-main/transferencia-plano-acao/transferencia-cadastro/br-tab-set/div/nav/transferencia-cadastro/form/div[1]/div/br-select/div/div/div[1]/ng-select/div/div/div[2]/input")

                if campo_ministerio:
                    driver.execute_script("arguments[0].scrollIntoView();", campo_ministerio)
                    campo_ministerio.click()
                    time.sleep(1)
                    campo_ministerio.send_keys("Minist√©rio do Esporte")
                    time.sleep(2)
                    campo_ministerio.send_keys(Keys.DOWN)
                    campo_ministerio.send_keys(Keys.ENTER)
                    esperar_pagina_carregar(driver)
                    print("‚úÖ 'Minist√©rio do Esporte' selecionado com sucesso!")
                else:
                    print("‚ö†Ô∏è ERRO: Campo de sele√ß√£o do Minist√©rio n√£o encontrado.")

            except Exception as e:
                print(f"‚ùå ERRO ao selecionar 'Minist√©rio do Esporte': {e}")



        # Chama a fun√ß√£o no fluxo do c√≥digo
        selecionar_ministerio(driver)

        # Localiza o campo de texto para o parecer
        campo_texto = esperar_elemento(driver,
                                       "/html/body/transferencia-especial-root/br-main-layout/div/div/div/main/transferencia-especial-main/transferencia-plano-acao/transferencia-cadastro/br-tab-set/div/nav/transferencia-cadastro/form/div[4]/div/br-textarea/div/div[1]/div/textarea")

        if campo_texto:
            campo_texto.clear()

            # Novo TEXTO 2 atualizado
            texto_parecer = f"""Declaramos, em resposta ao determinado pelo egr√©gio Supremo Tribunal Federal nos autos da ADPF-DF n¬∫ 854/2024 e em observ√¢ncia √† Portaria Conjunta MGI/MF n¬∫ 2/2025, que nenhuma das metas mencionadas na Plataforma Transferegov, oriundas da an√°lise deste Plano de Trabalho, decorrente de indica√ß√£o de ‚ÄúEmenda Pix‚Äù, tem ader√™ncia √† fun√ß√£o e subfun√ß√£o or√ßament√°rias designadas a este Minist√©rio.

            Assim, orientamos ao contemplado ente federado que adeque o Plano de A√ß√£o, modificando a fun√ß√£o e a subfun√ß√£o or√ßament√°rias direcionando-o ao √≥rg√£o setorial respons√°vel.

            N√∫mero do processo: {numero_processo}"""

        campo_situacao = esperar_elemento(driver, "/html/body/transferencia-especial-root/br-main-layout/div/div/div/main/transferencia-especial-main/transferencia-plano-acao/transferencia-cadastro/br-tab-set/div/nav/transferencia-cadastro/form/div[2]/div[1]/br-select/div/div/div[1]/ng-select/ng-dropdown-panel/div/div[2]/div[3]/span")
        if campo_situacao:
            campo_situacao.send_keys("N√£o se aplica")
            campo_situacao.send_keys(Keys.ENTER)
            print("‚úÖ Situa√ß√£o 'N√£o se aplica' selecionada com sucesso!")
            esperar_pagina_carregar(driver)

            # XPath do bot√£o que precisa ser clicado antes de continuar
            xpath_botao_proximo = "/html/body/transferencia-especial-root/br-main-layout/div/div/div/main/transferencia-especial-main/transferencia-plano-acao/transferencia-cadastro/br-tab-set/div/nav/transferencia-cadastro/div/button[2]"

            # Tenta clicar no bot√£o "Pr√≥ximo" antes de continuar
            botao_proximo = esperar_elemento(driver, xpath_botao_proximo)

            if botao_proximo:
                driver.execute_script("arguments[0].scrollIntoView();",
                                      botao_proximo)  # Garante que o bot√£o esteja vis√≠vel
                botao_proximo.click()  # Clica no bot√£o
                esperar_pagina_carregar(driver)  # Aguarda a p√°gina carregar completamente
                print("‚úÖ Bot√£o 'Pr√≥ximo' clicado com sucesso! Continuando para o pr√≥ximo processo...")
            else:
                print("‚ö†Ô∏è Erro: Bot√£o 'Pr√≥ximo' n√£o encontrado. Continuando mesmo assim.")

            # Retornar ao menu antes de iniciar o pr√≥ximo loop
            retornar_ao_menu(driver)



except Exception as e:
    print(f'‚ùå Erro durante o processo: {e}')

print("üöÄ Automa√ß√£o finalizada com sucesso!")
