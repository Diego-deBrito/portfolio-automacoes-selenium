from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from webdriver_manager.chrome import ChromeDriverManager
import time

929834


# Tempo m√°ximo de espera para os elementos carregarem
TEMPO_ESPERA = 10

# Fun√ß√£o para conectar ao navegador j√° aberto
def conectar_navegador_existente():
    print("Passo 1: Conectando ao navegador existente na porta de depura√ß√£o 9222...")
    options = webdriver.ChromeOptions()
    options.debugger_address = "localhost:9222"  # Porta do Chrome para depura√ß√£o
    driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()), options=options)
    print("Conex√£o ao navegador estabelecida.")
    return driver

# Fun√ß√£o para capturar todos os n√∫meros das p√°ginas dispon√≠veis
def obter_paginas_disponiveis(driver):
    try:
        paginas = WebDriverWait(driver, TEMPO_ESPERA).until(
            EC.presence_of_all_elements_located((By.XPATH, "//a[contains(@href, 'ConsultarNotasFiscais') and not(contains(text(), 'Pr√≥x'))]"))
        )
        return [pagina.text for pagina in paginas if pagina.text.isdigit()]
    except:
        return []




# Fun√ß√£o para clicar no bot√£o "Pr√≥ximo" m√∫ltiplas vezes
def clicar_proximo(driver, vezes):
    """Clica no bot√£o 'Pr√≥ximo' o n√∫mero necess√°rio de vezes para alcan√ßar a p√°gina correta."""
    for i in range(vezes):
        try:
            print(f"‚û°Ô∏è Clicando em 'Pr√≥ximo' ({i+1}/{vezes})...")
            botao_proximo = WebDriverWait(driver, TEMPO_ESPERA).until(
                EC.element_to_be_clickable((By.XPATH, "//a[text()='Pr√≥x']"))
            )
            botao_proximo.click()
            time.sleep(2)  # Pequena pausa para evitar falhas
        except Exception as e:
            print(f"‚ö†Ô∏è Erro ao clicar no bot√£o 'Pr√≥ximo': {e}")
            break



# Fun√ß√£o para processar todas as p√°ginas e baixar notas fiscais
def baixar_notas_fiscais(driver):
    pagina_atual = 1  # Come√ßa na primeira p√°gina
    while True:  # Loop at√© processar todas as p√°ginas
        paginas = obter_paginas_disponiveis(driver)

        if not paginas:
            print("üöÄ Nenhuma p√°gina encontrada! Finalizando...")
            break

        print(f"\nüìÑ Encontradas {len(paginas)} p√°ginas: {paginas}")


        for pagina in paginas:
            print(f"üîπ Acessando p√°gina {pagina}...")
            try:
                link_pagina = WebDriverWait(driver, TEMPO_ESPERA).until(
                    EC.element_to_be_clickable((By.XPATH, f"//a[text()='{pagina}']"))
                )
                link_pagina.click()
                WebDriverWait(driver, TEMPO_ESPERA).until(
                    EC.presence_of_element_located((By.XPATH, "//tbody[@id='tbodyrow']"))
                )  # Aguarda o carregamento da tabela
            except Exception as e:
                print(f"‚ö†Ô∏è Erro ao clicar na p√°gina {pagina}: {e}")
                continue  # Pula para a pr√≥xima p√°gina se houver erro

            print("Passo 2: Buscando notas fiscais na tabela...")

            try:
                # Captura todas as linhas da tabela
                linhas = WebDriverWait(driver, TEMPO_ESPERA).until(
                    EC.presence_of_all_elements_located((By.XPATH, "//tbody[@id='tbodyrow']/tr"))
                )

                print(f"Encontradas {len(linhas)} linhas na tabela.")

                for i in range(len(linhas)):
                    # Atualizar a lista de linhas porque a p√°gina pode recarregar
                    linhas = WebDriverWait(driver, TEMPO_ESPERA).until(
                        EC.presence_of_all_elements_located((By.XPATH, "//tbody[@id='tbodyrow']/tr"))
                    )

                    # Captura o link dentro da coluna "Tipo", que deve ser "NOTA FISCAL"
                    tipo_doc = WebDriverWait(linhas[i], TEMPO_ESPERA).until(
                        EC.presence_of_element_located((By.XPATH, "./td[3]/a"))
                    ).text.strip()

                    if tipo_doc == "NOTA FISCAL":
                        print(f"\nüîπ Acessando Nota Fiscal {i + 1}...")

                        # Clicar no link para abrir os detalhes
                        link_nota = WebDriverWait(linhas[i], TEMPO_ESPERA).until(
                            EC.element_to_be_clickable((By.XPATH, "./td[3]/a"))
                        )
                        link_nota.click()

                        WebDriverWait(driver, TEMPO_ESPERA).until(
                            EC.presence_of_element_located((By.XPATH, "/html/body/div[3]/div[15]/div[4]/div[1]"))
                        )  # Aguarda o carregamento da p√°gina de detalhes

                        try:
                            # Clicar no bot√£o de download
                            print("üîΩ Baixando o arquivo...")
                            botao_download = WebDriverWait(driver, TEMPO_ESPERA).until(
                                EC.element_to_be_clickable((By.XPATH, "/html/body/div[3]/div[15]/div[4]/div[1]/div/form/table/tbody/tr[24]/td/div[1]/table/tbody/tr/td[3]/nobr/a"))
                            )
                            botao_download.click()
                        except Exception as e:
                            print(f"‚ö†Ô∏è Erro ao tentar baixar o arquivo: {e}")

                        # Voltar para a lista de documentos
                        print("üîô Retornando para a lista...")
                        botao_voltar = WebDriverWait(driver, TEMPO_ESPERA).until(
                            EC.element_to_be_clickable((By.XPATH, "/html/body/div[3]/div[15]/div[4]/div[1]/div/form/table/tbody/tr[39]/td[2]/input"))
                        )
                        botao_voltar.click()

                        WebDriverWait(driver, TEMPO_ESPERA).until(
                            EC.presence_of_element_located((By.XPATH, "//tbody[@id='tbodyrow']"))
                        )  # Aguarda recarregamento da tabela

                        # Reabrir a mesma p√°gina para continuar
                        print(f"üîÑ Voltando para a p√°gina {pagina}...")
                        try:
                            link_pagina = WebDriverWait(driver, TEMPO_ESPERA).until(
                                EC.element_to_be_clickable((By.XPATH, f"//a[text()='{pagina}']"))
                            )
                            link_pagina.click()
                            WebDriverWait(driver, TEMPO_ESPERA).until(
                                EC.presence_of_element_located((By.XPATH, "//tbody[@id='tbodyrow']"))
                            )
                        except Exception as e:
                            print(f"‚ö†Ô∏è Erro ao tentar recarregar a p√°gina {pagina}: {e}")
                            break  # Sai do loop se n√£o conseguir voltar

            except Exception as e:
                print(f"‚ö†Ô∏è Erro geral ao processar a p√°gina {pagina}: {e}")

        # Tentar clicar no bot√£o "Pr√≥ximo" ap√≥s todas as p√°ginas num√©ricas serem processadas
        try:
            botao_proximo = WebDriverWait(driver, TEMPO_ESPERA).until(
                EC.element_to_be_clickable((By.XPATH, "//a[text()='Pr√≥x']"))
            )
            print("‚û°Ô∏è Avan√ßando para a pr√≥xima s√©rie de p√°ginas...")
            botao_proximo.click()
            WebDriverWait(driver, TEMPO_ESPERA).until(
                EC.presence_of_element_located((By.XPATH, "//tbody[@id='tbodyrow']"))
            )
        except:
            print("üöÄ Todas as p√°ginas foram processadas.")
            break  # Sai do loop quando n√£o h√° mais p√°ginas

# Execu√ß√£o do script
if __name__ == "__main__":
    driver = conectar_navegador_existente()
    baixar_notas_fiscais(driver)
    print("‚úÖ Processo finalizado com sucesso!")
